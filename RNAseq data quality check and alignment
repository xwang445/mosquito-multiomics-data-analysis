#!/bin/bash
  
#SBATCH --nodes=1
#SBATCH --ntasks=4
#SBATCH --cpus-per-task=1
#SBATCH --mem=128G
#SBATCH --time=48:00:00
#SBATCH --mail-user=email@address
#SBATCH --mail-type=ALL
#SBATCH -p intel
#SBATCH --output=RNA_QC_align_%j.log

module load fastqc/0.11.9

# Maximum number of parallel FastQC jobs
MAX_JOBS=4
CURRENT_JOBS=0

# Loop through each directory in soapnuke/clean/
for dir in RNAseq/soapnuke/clean/{1..24}; do
    # Check if the directory exists
    if [ -d "$dir" ]; then
        # Perform FastQC on each .fq.gz file in the directory in parallel
        for file in "${dir}"/*.fq.gz; do
            fastqc -o RNAseq/fastqc "$file" &
            let CURRENT_JOBS=CURRENT_JOBS+1
    
            # Wait if the number of current jobs reaches the maximum
            if [ "$CURRENT_JOBS" -ge "$MAX_JOBS" ]; then
                wait -n
                let CURRENT_JOBS=CURRENT_JOBS-1
            fi
        done
    else
        echo "Directory $dir not found."
    fi
done

# Wait for all background jobs to finish
wait

----------------------------------------------------------------------------------------------------------

# alignment with STAR

#!/bin/bash

#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --mem=128G
#SBATCH --time=60:00:00
#SBATCH --mail-user=email@address
#SBATCH --mail-type=ALL
#SBATCH --job-name="STAR_align"
#SBATCH -p intel
#SBATCH --output=star_%j.log

module load star/2.7.11a
module load samtools/1.17

# Define the reference genome and output directory
REFERENCE="Aaegy_genome/VectorBase-66_AaegyptiLVP_AGWG_Genome.fasta"
OUTPUT_DIR="RNAseq/bamfiles"

# Index reference genome
STAR --runThreadN 4 \
       --runMode genomeGenerate \
       --genomeDir Aaegy_genome \
       --genomeFastaFiles $REFERENCE \
       --sjdbGTFfile Aaegy_genome/VectorBase-66_AaegyptiLVP_AGWG.gff

# Maximum number of parallel star jobs
MAX_JOBS=8
CURRENT_JOBS=0

# Path to the STAR genome index directory
GENOME_DIR="Aaegy_genome"

# Directory containing the 36 subdirectories
PARENT_DIR="soapnuke/clean"

# Loop through each directory and process the files
for i in $(seq 1 24); do
    # Define input files
    FILE1="${PARENT_DIR}/${i}/${i}_1.fq.gz"
    FILE2="${PARENT_DIR}/${i}/${i}_2.fq.gz"

    # Check if both files exist
    if [[ -f "$FILE1" && -f "$FILE2" ]]; then
        # Define output directory for this pair
        OUT_DIR="${OUTPUT_DIR}/${i}"
        mkdir -p "$OUT_DIR"
        # Run STAR alignment
        STAR --genomeDir "$GENOME_DIR" \
              --readFilesIn "$FILE1" "$FILE2" \
              --runThreadN 8 \
              --outFileNamePrefix "$OUT_DIR/" \
              --outSAMtype BAM SortedByCoordinate \
              --readFilesCommand zcat

        echo "Alignment done for pair ${i}"
    else
        echo "Files for pair ${i} not found."
    fi
done
